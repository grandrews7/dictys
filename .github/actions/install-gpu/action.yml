name: Install GPU based version with anaconda & install checks

inputs:
  python-version:
    description: Python version within anaconda. Not the python version anaconda is based on
    required: true
  cuda-version:
    description: cudatoolkit version within anaconda
    required: true

runs:
  using: composite
  steps:
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: 3.8
    - name: Add conda to system path
      shell: bash
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
    - name: Test install script agreement between INSTALL.md and doc/scripts/install-gpu.sh
      shell: bash
      run: |
        # Install command in INSTALL.md (triple quoted in GPU section)
        linestart=$(grep -n '## GPU' INSTALL.md | awk -F: '{print $1}' | head -n 1)
        lines="$(tail -n +$linestart INSTALL.md | grep -n '^```$' | awk -F: '{print $1}' | head -n 2)"
        linestart2=$(echo "$lines" | head -n 1)
        lineend=$(echo "$lines" | tail -n 1)
        if [ "$(echo "$lines" | wc -l )" -le 1 ]; then exit 1; fi
        s1="$(tail -n +$linestart INSTALL.md | head -n $(( lineend - 1 )) | tail -n +$(( linestart2 + 1 )) )"
        echo "$s1"
        # Install command in doc/scripts/install-gpu.sh (after first empty line)
        slinestart=$(grep -n '^$' doc/scripts/install-gpu.sh | awk -F: '{print $1}' | head -n 1)
        s2="$(tail -n +$(( slinestart + 1 )) doc/scripts/install-gpu.sh)"
        s2="${s2/\$PYTHONVERSION_CONDA/3.8}"
        s2="${s2/\$CUDAVERSION_CONDA/11.3}"
        echo "$s2"
        cmp <(echo "$s1") <(echo "$s2")
    - name: Test install
      shell: bash
      run: PYTHONVERSION_CONDA=${{ inputs.python-version }} CUDAVERSION_CONDA=${{ inputs.cuda-version }} . doc/scripts/install-cpu.sh
    - name: Test python version
      shell: bash
      run: |
        set -e -o pipefail
        . activate dictys_env_name
        v="${{ inputs.python-version }}"
        v="Python ${v/./[.]}"
        python --version
        python --version 2>&1 | grep "$v"
        conda deactivate
