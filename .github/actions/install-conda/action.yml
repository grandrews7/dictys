# Lingfei Wang, 2022, 2023. All rights reserved.
name: Install with anaconda & install checks through conda scripts

inputs:
  package:
    description: Package name and optionally version to install
    required: true
  cuda-version:
    description: cudatoolkit version within anaconda. If omited, install CPU version instead.
    required: false
    default: ""
  python-version:
    description: python version within anaconda, e.g. "3.9". Defaults to 3.9.
    required: false
    default: "3.9"

runs:
  using: composite
  steps:
    - name: Install
      shell: bash
      run: |
        echo '::group::Installation'
        if [ "a${{ inputs.cuda-version }}" == "a" ]; then
          channeladd="-c conda-forge -c pytorch"; pkgadd="pytorch torchvision torchaudio cpuonly"
        elif [ "a${{ inputs.cuda-version }}" == "a11.3" ]; then
          channeladd="-c pytorch -c conda-forge"; pkgadd="pytorch==1.12.1 torchvision==0.13.1 torchaudio==0.12.1 cudatoolkit=11.3"
        elif [ "a${{ inputs.cuda-version }}" == "a11.6" ]; then
          channeladd="-c pytorch -c conda-forge"; pkgadd="pytorch==1.12.1 torchvision==0.13.1 torchaudio==0.12.1 cudatoolkit=11.6"
        elif [ "a${{ inputs.cuda-version }}" == "a11.7" ]; then
          channeladd="-c conda-forge -c pytorch -c nvidia"; pkgadd="pytorch torchvision torchaudio pytorch-cuda=11.7"
        else
          echo "Unsupported CUDA version ${{ inputs.cuda-version }}."; exit 1
        fi
        conda create -y -n dictys -c conda-forge python=${{ inputs.python-version }} mamba
        . activate dictys
        mamba install -y -c lingfeiwang -c bioconda $channeladd ${{ inputs.package }} $pkgadd
        echo '::endgroup::'
    - name: Test python version
      shell: bash
      run: |
        set -e -o pipefail
        . activate dictys
        v="${{ inputs.python-version }}"
        v="Python ${v/./[.]}"
        python --version
        python --version 2>&1 | grep "$v"
        python3 --version
        python3 --version 2>&1 | grep "$v"
        conda deactivate
    - name: Test run
      shell: bash
      run: |
        set -e -o pipefail
        . activate dictys
        python -m dictys -h
        python -m dictys preproc selects_rna -h
        conda deactivate
